<!-- Signup -->
<% layout('layouts/boilerplate') -%>

<div class="container mt-5">
  <div class="row justify-content-center">
    <div class="col-lg-6 col-md-8 col-sm-10">
      <div class="card shadow-sm p-4">
        <h2 class="text-center mb-4">Sign Up</h2>
        <form action="/signup" method="POST">
          <!-- Name Field -->
          <div class="mb-3">
            <label for="name" class="form-label">Name:</label>
            <input
              type="text"
              class="form-control"
              name="name"
              id="name"
              placeholder="Enter your name"
              required
            />
          </div>

          <!-- Email Field -->
          <div class="mb-3">
            <label for="email" class="form-label">Email:</label>
            <input
              type="email"
              class="form-control"
              name="email"
              id="email"
              placeholder="Enter your email"
              required
            />
          </div>

          <!-- Phone Field -->
          <div class="mb-3">
            <label for="phone" class="form-label">Phone:</label>
            <input
              type="tel"
              class="form-control"
              name="phone"
              id="phone"
              placeholder="Enter your phone number"
              required
            />
          </div>

          <!-- Password Field -->
          <div class="mb-3">
            <label for="password" class="form-label">Password:</label>
            <input
              type="password"
              class="form-control"
              name="password"
              id="password"
              placeholder="Enter your password"
              required
            />
          </div>

          <!-- Role Selection -->
          <div class="mb-3">
            <label for="role" class="form-label">Sign up as:</label>
            <select
              name="role"
              id="role"
              class="form-select"
              aria-label="Default select example"
              required
            >
              <option value="user">User</option>
              <option value="organization">Organization</option>
            </select>
          </div>

          <!-- Location Field (Hidden for users) -->
          <div id="locationField" style="display: none">
            <div class="mb-3">
              <label for="locationInput" class="form-label"
                >Select Location:</label
              >
              <div class="input-group">
                <input
                  type="text"
                  class="form-control"
                  id="locationInput"
                  placeholder="Search for a location"
                />
                <button
                  class="btn btn-outline-secondary"
                  type="button"
                  id="searchButton"
                >
                  Search
                </button>
              </div>
            </div>

            <!-- Map Display -->
            <div class="mb-3">
              <div
                id="map"
                style="height: 400px; width: 100%; border: 1px solid #ccc"
              ></div>
            </div>

            <!-- Hidden Fields for Latitude and Longitude -->
            <input type="hidden" name="latitude" id="latitude" />
            <input type="hidden" name="longitude" id="longitude" />
          </div>

          <!-- Submit Button -->
          <div class="d-grid gap-2">
            <button type="submit" class="btn btn-primary btn-block">
              Sign Up
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Custom CSS -->
<style>
  body {
    background-color: #f8f9fa;
  }

  .card {
    background-color: white;
    border-radius: 10px;
    border: none;
  }

  .form-label {
    font-weight: 500;
  }

  #map {
    border-radius: 5px;
  }

  .btn-block {
    background-color: #007bff;
    color: white;
    padding: 10px;
    font-size: 16px;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s;
  }

  .btn-block:hover {
    background-color: #0056b3;
  }
</style>

<!-- JavaScript for Map and Role Selection -->
<script>
  // Event listener for role selection
  document.getElementById("role").addEventListener("change", function () {
    const locationField = document.getElementById("locationField");
    if (this.value === "organization") {
      locationField.style.display = "block"; // Show location input
      initMap(); // Initialize the map when the organization role is selected
    } else {
      locationField.style.display = "none"; // Hide location input
    }
  });

  function initMap() {
    const map = L.map("map").setView([20.5937, 78.9629], 5); // Initial view over India

    // Add OpenStreetMap tile layer
    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
      maxZoom: 19,
      attribution: "Â© OpenStreetMap",
    }).addTo(map);

    let marker;

    // Attempt to get the user's current location
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        function (position) {
          const { latitude, longitude } = position.coords;

          // Set map view to the user's current location
          map.setView([latitude, longitude], 13); // Zoom level 13

          // Add a marker at the user's current location
          marker = L.marker([latitude, longitude]).addTo(map);

          // Set latitude and longitude in hidden input fields
          document.getElementById("latitude").value = latitude;
          document.getElementById("longitude").value = longitude;
        },
        function () {
          alert(
            "Unable to retrieve your location. Please enable location services."
          );
        }
      );
    } else {
      alert("Geolocation is not supported by this browser.");
    }

    // Handle click event on the map
    map.on("click", function (e) {
      const { lat, lng } = e.latlng;

      // Remove existing marker if present
      if (marker) {
        map.removeLayer(marker);
      }

      // Add a new marker at the clicked location
      marker = L.marker([lat, lng]).addTo(map);

      // Set latitude and longitude in hidden input fields
      document.getElementById("latitude").value = lat;
      document.getElementById("longitude").value = lng;
    });

    // Handle search functionality
    document
      .getElementById("searchButton")
      .addEventListener("click", function () {
        const locationInput = document.getElementById("locationInput").value;

        if (locationInput) {
          fetch(
            `https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(
              locationInput
            )}&format=json&addressdetails=1`
          )
            .then((response) => response.json())
            .then((data) => {
              if (data.length > 0) {
                const { lat, lon } = data[0]; // Get the first result's latitude and longitude

                // Set the map view to the searched location
                map.setView([lat, lon], 13); // Zoom level 13

                // Remove existing marker if present
                if (marker) {
                  map.removeLayer(marker);
                }

                // Add a marker at the searched location
                marker = L.marker([lat, lon]).addTo(map);

                // Set latitude and longitude in hidden input fields
                document.getElementById("latitude").value = lat;
                document.getElementById("longitude").value = lon;
              } else {
                alert("Location not found. Please try a different search.");
              }
            })
            .catch((error) => {
              console.error("Error fetching location:", error);
              alert("Error fetching location. Please try again.");
            });
        } else {
          alert("Please enter a location to search.");
        }
      });
  }
</script>
